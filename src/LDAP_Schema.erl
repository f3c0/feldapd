%%% Do not modify this file, it is automatically generated by abnfc.
%%% All changes will be lost when it is regenerated.
%%% Generated by abnfc_gen on 2012-11-03 17:07:38

-module('LDAP_Schema').

-export(['ALPHA'/0, 'Attribute'/0, 'AttributeType'/0,
	 'AttributeTypeDescription'/0, 'AttributeTypes'/0,
	 'COMMA'/0, 'DIGIT'/0, 'DITContentRule'/0,
	 'DITContentRuleDescription'/0, 'DITStructureRule'/0,
	 'DITStructureRuleDescription'/0, 'DOLLAR'/0, 'DOT'/0,
	 'DQUOTE'/0, 'EQUALS'/0, 'ESC'/0, 'HEX'/0, 'HYPHEN'/0,
	 'LANGLE'/0, 'LCURLY'/0, 'LDIGIT'/0, 'LPAREN'/0,
	 'LdapSyntax'/0, 'LdapSyntaxes'/0, 'MatchingRule'/0,
	 'MatchingRuleDescription'/0, 'MatchingRuleUse'/0,
	 'MatchingRuleUseDescription'/0, 'MatchingRules'/0,
	 'NULL'/0, 'NameForm'/0, 'NameFormDescription'/0,
	 'OCTET'/0, 'ObjectClass'/0, 'ObjectClassDescription'/0,
	 'ObjectClasses'/0, 'PLUS'/0, 'QQ'/0, 'QS'/0, 'QUTF1'/0,
	 'QUTF8'/0, 'RANGLE'/0, 'RCURLY'/0, 'RPAREN'/0,
	 'SCHEMA'/0, 'SEMI'/0, 'SHARP'/0, 'SP'/0, 'SPACE'/0,
	 'SQUOTE'/0, 'Syntax'/0, 'SyntaxDescription'/0,
	 'USCORE'/0, 'UTF0'/0, 'UTF1'/0, 'UTF2'/0, 'UTF3'/0,
	 'UTF4'/0, 'UTF8'/0, 'UTFMB'/0, 'WSP'/0,
	 attributedescription/0, attributetype/0, decode/2,
	 descr/0, dstring/0, extensions/0, keychar/0,
	 keystring/0, kind/0, leadkeychar/0, len/0, noidlen/0,
	 number/0, numericoid/0, oid/0, oidlist/0, oids/0,
	 option/0, options/0, qdescr/0, qdescrlist/0, qdescrs/0,
	 qdstring/0, qdstringlist/0, qdstrings/0, ruleid/0,
	 ruleidlist/0, ruleids/0, usage/0, xstring/0]).

-include("LDAP_Schema.hrl").

decode(keystring, Str) -> (keystring())(Str);
decode(leadkeychar, Str) -> (leadkeychar())(Str);
decode(keychar, Str) -> (keychar())(Str);
decode(number, Str) -> (number())(Str);
decode('ALPHA', Str) -> ('ALPHA'())(Str);
decode('DIGIT', Str) -> ('DIGIT'())(Str);
decode('LDIGIT', Str) -> ('LDIGIT'())(Str);
decode('HEX', Str) -> ('HEX'())(Str);
decode('SP', Str) -> ('SP'())(Str);
decode('WSP', Str) -> ('WSP'())(Str);
decode('NULL', Str) -> ('NULL'())(Str);
decode('SPACE', Str) -> ('SPACE'())(Str);
decode('DQUOTE', Str) -> ('DQUOTE'())(Str);
decode('SHARP', Str) -> ('SHARP'())(Str);
decode('DOLLAR', Str) -> ('DOLLAR'())(Str);
decode('SQUOTE', Str) -> ('SQUOTE'())(Str);
decode('LPAREN', Str) -> ('LPAREN'())(Str);
decode('RPAREN', Str) -> ('RPAREN'())(Str);
decode('PLUS', Str) -> ('PLUS'())(Str);
decode('COMMA', Str) -> ('COMMA'())(Str);
decode('HYPHEN', Str) -> ('HYPHEN'())(Str);
decode('DOT', Str) -> ('DOT'())(Str);
decode('SEMI', Str) -> ('SEMI'())(Str);
decode('LANGLE', Str) -> ('LANGLE'())(Str);
decode('EQUALS', Str) -> ('EQUALS'())(Str);
decode('RANGLE', Str) -> ('RANGLE'())(Str);
decode('ESC', Str) -> ('ESC'())(Str);
decode('USCORE', Str) -> ('USCORE'())(Str);
decode('LCURLY', Str) -> ('LCURLY'())(Str);
decode('RCURLY', Str) -> ('RCURLY'())(Str);
decode('UTF8', Str) -> ('UTF8'())(Str);
decode('UTFMB', Str) -> ('UTFMB'())(Str);
decode('UTF0', Str) -> ('UTF0'())(Str);
decode('UTF1', Str) -> ('UTF1'())(Str);
decode('UTF2', Str) -> ('UTF2'())(Str);
decode('UTF3', Str) -> ('UTF3'())(Str);
decode('UTF4', Str) -> ('UTF4'())(Str);
decode('OCTET', Str) -> ('OCTET'())(Str);
decode(numericoid, Str) -> (numericoid())(Str);
decode(descr, Str) -> (descr())(Str);
decode(oid, Str) -> (oid())(Str);
decode(attributedescription, Str) ->
    (attributedescription())(Str);
decode(attributetype, Str) -> (attributetype())(Str);
decode(options, Str) -> (options())(Str);
decode(option, Str) -> (option())(Str);
decode(noidlen, Str) -> (noidlen())(Str);
decode(len, Str) -> (len())(Str);
decode(oids, Str) -> (oids())(Str);
decode(oidlist, Str) -> (oidlist())(Str);
decode(extensions, Str) -> (extensions())(Str);
decode(xstring, Str) -> (xstring())(Str);
decode(qdescrs, Str) -> (qdescrs())(Str);
decode(qdescrlist, Str) -> (qdescrlist())(Str);
decode(qdescr, Str) -> (qdescr())(Str);
decode(qdstrings, Str) -> (qdstrings())(Str);
decode(qdstringlist, Str) -> (qdstringlist())(Str);
decode(qdstring, Str) -> (qdstring())(Str);
decode(dstring, Str) -> (dstring())(Str);
decode('QQ', Str) -> ('QQ'())(Str);
decode('QS', Str) -> ('QS'())(Str);
decode('QUTF8', Str) -> ('QUTF8'())(Str);
decode('QUTF1', Str) -> ('QUTF1'())(Str);
decode('ObjectClassDescription', Str) ->
    ('ObjectClassDescription'())(Str);
decode(kind, Str) -> (kind())(Str);
decode('AttributeTypeDescription', Str) ->
    ('AttributeTypeDescription'())(Str);
decode(usage, Str) -> (usage())(Str);
decode('MatchingRuleDescription', Str) ->
    ('MatchingRuleDescription'())(Str);
decode('MatchingRuleUseDescription', Str) ->
    ('MatchingRuleUseDescription'())(Str);
decode('SyntaxDescription', Str) ->
    ('SyntaxDescription'())(Str);
decode('DITContentRuleDescription', Str) ->
    ('DITContentRuleDescription'())(Str);
decode('DITStructureRuleDescription', Str) ->
    ('DITStructureRuleDescription'())(Str);
decode(ruleids, Str) -> (ruleids())(Str);
decode(ruleidlist, Str) -> (ruleidlist())(Str);
decode(ruleid, Str) -> (ruleid())(Str);
decode('NameFormDescription', Str) ->
    ('NameFormDescription'())(Str);
decode('SCHEMA', Str) -> ('SCHEMA'())(Str);
decode('AttributeType', Str) ->
    ('AttributeType'())(Str);
decode('AttributeTypes', Str) ->
    ('AttributeTypes'())(Str);
decode('ObjectClass', Str) -> ('ObjectClass'())(Str);
decode('ObjectClasses', Str) ->
    ('ObjectClasses'())(Str);
decode('MatchingRule', Str) -> ('MatchingRule'())(Str);
decode('MatchingRules', Str) ->
    ('MatchingRules'())(Str);
decode('LdapSyntax', Str) -> ('LdapSyntax'())(Str);
decode('LdapSyntaxes', Str) -> ('LdapSyntaxes'())(Str);
decode('NameForm', Str) -> ('NameForm'())(Str);
decode('DITStructureRule', Str) ->
    ('DITStructureRule'())(Str);
decode('DITContentRule', Str) ->
    ('DITContentRule'())(Str);
decode('Syntax', Str) -> ('Syntax'())(Str);
decode('MatchingRuleUse', Str) ->
    ('MatchingRuleUse'())(Str);
decode('Attribute', Str) -> ('Attribute'())(Str).

keystring() ->
    '__seq'([leadkeychar(),
	     '__repeat'(0, infinity, keychar())]).

leadkeychar() -> 'ALPHA'().

keychar() ->
    '__alt'(['ALPHA'(), 'DIGIT'(), 'HYPHEN'()]).

number() ->
    '__alt'(['__seq'(['LDIGIT'(),
		      '__repeat'(1, infinity, 'DIGIT'())]),
	     'DIGIT'()]).

'ALPHA'() ->
    fun ([C | Tl]) when (C >= 65) and (C =< 90) ->
	    {ok, C, Tl};
	([C | Tl]) when (C >= 97) and (C =< 122) -> {ok, C, Tl};
	(_) -> fail
    end.

'DIGIT'() ->
    '__alt'([fun ([C | Tl]) when C == 48 -> {ok, C, Tl};
		 (_) -> fail
	     end,
	     'LDIGIT'()]).

'LDIGIT'() ->
    fun ([C | Tl]) when (C >= 49) and (C =< 57) ->
	    {ok, C, Tl};
	(_) -> fail
    end.

'HEX'() ->
    '__alt'([fun ([C | Tl]) when (C >= 65) and (C =< 70) ->
		     {ok, C, Tl};
		 ([C | Tl]) when (C >= 97) and (C =< 102) -> {ok, C, Tl};
		 (_) -> fail
	     end,
	     'DIGIT'()]).

'SP'() -> '__repeat'(1, infinity, 'SPACE'()).

'WSP'() -> '__repeat'(0, infinity, 'SPACE'()).

'NULL'() ->
    fun ([0 | Tl]) -> {ok, 0, Tl};
	(_) -> fail
    end.

'SPACE'() ->
    fun ([32 | Tl]) -> {ok, 32, Tl};
	(_) -> fail
    end.

'DQUOTE'() ->
    fun ([34 | Tl]) -> {ok, 34, Tl};
	(_) -> fail
    end.

'SHARP'() ->
    fun ([35 | Tl]) -> {ok, 35, Tl};
	(_) -> fail
    end.

'DOLLAR'() ->
    fun ([36 | Tl]) -> {ok, 36, Tl};
	(_) -> fail
    end.

'SQUOTE'() ->
    fun ([39 | Tl]) -> {ok, 39, Tl};
	(_) -> fail
    end.

'LPAREN'() ->
    fun ([40 | Tl]) -> {ok, 40, Tl};
	(_) -> fail
    end.

'RPAREN'() ->
    fun ([41 | Tl]) -> {ok, 41, Tl};
	(_) -> fail
    end.

'PLUS'() ->
    fun ([43 | Tl]) -> {ok, 43, Tl};
	(_) -> fail
    end.

'COMMA'() ->
    fun ([44 | Tl]) -> {ok, 44, Tl};
	(_) -> fail
    end.

'HYPHEN'() ->
    fun ([45 | Tl]) -> {ok, 45, Tl};
	(_) -> fail
    end.

'DOT'() ->
    fun ([46 | Tl]) -> {ok, 46, Tl};
	(_) -> fail
    end.

'SEMI'() ->
    fun ([59 | Tl]) -> {ok, 59, Tl};
	(_) -> fail
    end.

'LANGLE'() ->
    fun ([60 | Tl]) -> {ok, 60, Tl};
	(_) -> fail
    end.

'EQUALS'() ->
    fun ([61 | Tl]) -> {ok, 61, Tl};
	(_) -> fail
    end.

'RANGLE'() ->
    fun ([62 | Tl]) -> {ok, 62, Tl};
	(_) -> fail
    end.

'ESC'() ->
    fun ([92 | Tl]) -> {ok, 92, Tl};
	(_) -> fail
    end.

'USCORE'() ->
    fun ([95 | Tl]) -> {ok, 95, Tl};
	(_) -> fail
    end.

'LCURLY'() ->
    fun ([123 | Tl]) -> {ok, 123, Tl};
	(_) -> fail
    end.

'RCURLY'() ->
    fun ([125 | Tl]) -> {ok, 125, Tl};
	(_) -> fail
    end.

'UTF8'() -> '__alt'(['UTF1'(), 'UTFMB'()]).

'UTFMB'() -> '__alt'(['UTF2'(), 'UTF3'(), 'UTF4'()]).

'UTF0'() ->
    fun ([C | Tl]) when (C >= 128) and (C =< 191) ->
	    {ok, C, Tl};
	(_) -> fail
    end.

'UTF1'() ->
    fun ([C | Tl]) when (C >= 0) and (C =< 127) ->
	    {ok, C, Tl};
	(_) -> fail
    end.

'UTF2'() ->
    '__seq'([fun ([C | Tl])
		     when (C >= 194) and (C =< 223) ->
		     {ok, C, Tl};
		 (_) -> fail
	     end,
	     'UTF0'()]).

'UTF3'() ->
    '__alt'(['__seq'([fun ([224 | Tl]) -> {ok, 224, Tl};
			  (_) -> fail
		      end,
		      fun ([C | Tl]) when (C >= 160) and (C =< 191) ->
			      {ok, C, Tl};
			  (_) -> fail
		      end,
		      'UTF0'()]),
	     '__seq'([fun ([C | Tl])
			      when (C >= 225) and (C =< 236) ->
			      {ok, C, Tl};
			  (_) -> fail
		      end,
		      '__repeat'(2, 2, 'UTF0'())]),
	     '__seq'([fun ([237 | Tl]) -> {ok, 237, Tl};
			  (_) -> fail
		      end,
		      fun ([C | Tl]) when (C >= 128) and (C =< 159) ->
			      {ok, C, Tl};
			  (_) -> fail
		      end,
		      'UTF0'()]),
	     '__seq'([fun ([C | Tl])
			      when (C >= 238) and (C =< 239) ->
			      {ok, C, Tl};
			  (_) -> fail
		      end,
		      '__repeat'(2, 2, 'UTF0'())])]).

'UTF4'() ->
    '__alt'(['__seq'([fun ([240 | Tl]) -> {ok, 240, Tl};
			  (_) -> fail
		      end,
		      fun ([C | Tl]) when (C >= 144) and (C =< 191) ->
			      {ok, C, Tl};
			  (_) -> fail
		      end,
		      '__repeat'(2, 2, 'UTF0'())]),
	     '__seq'([fun ([C | Tl])
			      when (C >= 241) and (C =< 243) ->
			      {ok, C, Tl};
			  (_) -> fail
		      end,
		      '__repeat'(3, 3, 'UTF0'())]),
	     '__seq'([fun ([244 | Tl]) -> {ok, 244, Tl};
			  (_) -> fail
		      end,
		      fun ([C | Tl]) when (C >= 128) and (C =< 143) ->
			      {ok, C, Tl};
			  (_) -> fail
		      end,
		      '__repeat'(2, 2, 'UTF0'())])]).

'OCTET'() ->
    fun ([C | Tl]) when (C >= 0) and (C =< 255) ->
	    {ok, C, Tl};
	(_) -> fail
    end.

numericoid() ->
    '__seq'([number(),
	     '__repeat'(1, infinity, '__seq'(['DOT'(), number()]))]).

descr() -> keystring().

oid() -> '__alt'([descr(), numericoid()]).

attributedescription() ->
    '__seq'([attributetype(), options()]).

attributetype() -> oid().

options() ->
    '__repeat'(0, infinity, '__seq'(['SEMI'(), option()])).

option() -> '__repeat'(1, infinity, keychar()).

noidlen() ->
    '__seq'([numericoid(),
	     '__repeat'(0, 1,
			'__seq'(['LCURLY'(), len(), 'RCURLY'()]))]).

len() -> number().

oids() ->
    '__alt'([oid(),
	     '__seq'(['LPAREN'(), 'WSP'(), oidlist(), 'WSP'(),
		      'RPAREN'()])]).

oidlist() ->
    '__seq'([oid(),
	     '__repeat'(0, infinity,
			'__seq'(['WSP'(), 'DOLLAR'(), 'WSP'(), oid()]))]).

extensions() ->
    '__repeat'(0, infinity,
	       '__seq'(['SP'(), xstring(), 'SP'(), qdstrings()])).

xstring() ->
    '__seq'([fun ([C | Tl]) when C == 120 -> {ok, C, Tl};
		 ([C | Tl]) when C == 88 -> {ok, C, Tl};
		 (_) -> fail
	     end,
	     'HYPHEN'(),
	     '__repeat'(1, infinity,
			'__alt'(['ALPHA'(), 'HYPHEN'(), 'USCORE'()]))]).

qdescrs() ->
    '__alt'([qdescr(),
	     '__seq'(['LPAREN'(), 'WSP'(), qdescrlist(), 'WSP'(),
		      'RPAREN'()])]).

qdescrlist() ->
    '__repeat'(0, 1,
	       '__seq'([qdescr(),
			'__repeat'(0, infinity, '__seq'(['SP'(), qdescr()]))])).

qdescr() -> '__seq'(['SQUOTE'(), descr(), 'SQUOTE'()]).

qdstrings() ->
    '__alt'([qdstring(),
	     '__seq'(['LPAREN'(), 'WSP'(), qdstringlist(), 'WSP'(),
		      'RPAREN'()])]).

qdstringlist() ->
    '__repeat'(0, 1,
	       '__seq'([qdstring(),
			'__repeat'(0, infinity,
				   '__seq'(['SP'(), qdstring()]))])).

qdstring() ->
    '__seq'(['SQUOTE'(), dstring(), 'SQUOTE'()]).

dstring() ->
    '__repeat'(1, infinity,
	       '__alt'(['QS'(), 'QQ'(), 'QUTF8'()])).

'QQ'() ->
    '__seq'(['ESC'(),
	     fun ([50 | Tl]) -> {ok, 50, Tl};
		 (_) -> fail
	     end,
	     fun ([55 | Tl]) -> {ok, 55, Tl};
		 (_) -> fail
	     end]).

'QS'() ->
    '__seq'(['ESC'(),
	     fun ([53 | Tl]) -> {ok, 53, Tl};
		 (_) -> fail
	     end,
	     fun ([C | Tl]) when C == 67 -> {ok, C, Tl};
		 ([C | Tl]) when C == 99 -> {ok, C, Tl};
		 (_) -> fail
	     end]).

'QUTF8'() -> '__alt'(['QUTF1'(), 'UTFMB'()]).

'QUTF1'() ->
    fun ([C | Tl]) when (C >= 40) and (C =< 91) ->
	    {ok, C, Tl};
	([C | Tl]) when (C >= 0) and (C =< 38) -> {ok, C, Tl};
	([C | Tl]) when (C >= 93) and (C =< 127) -> {ok, C, Tl};
	(_) -> fail
    end.

'ObjectClassDescription'() ->
    '__seq'(['LPAREN'(), 'WSP'(), numericoid(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 110) or (C1 == 78),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 109) or (C3 == 77),
					      (C4 == 101) or (C4 == 69) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdescrs()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 100) or (C1 == 68),
					      (C2 == 101) or (C2 == 69),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 99) or (C4 == 67) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdstring()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
					 when (C1 == 111) or (C1 == 79),
					      (C2 == 98) or (C2 == 66),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 111) or (C4 == 79),
					      (C5 == 108) or (C5 == 76),
					      (C6 == 101) or (C6 == 69),
					      (C7 == 116) or (C7 == 84),
					      (C8 == 101) or (C8 == 69) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
				     (_) -> fail
				 end])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3 | Tl])
					 when (C1 == 115) or (C1 == 83),
					      (C2 == 117) or (C2 == 85),
					      (C3 == 112) or (C3 == 80) ->
					 {ok, [C1, C2, C3], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oids()])),
	     '__repeat'(0, 1, '__seq'(['SP'(), kind()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 109) or (C1 == 77),
					      (C2 == 117) or (C2 == 85),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 116) or (C4 == 84) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oids()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3 | Tl])
					 when (C1 == 109) or (C1 == 77),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 121) or (C3 == 89) ->
					 {ok, [C1, C2, C3], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oids()])),
	     extensions(), 'WSP'(), 'RPAREN'()]).

kind() ->
    '__alt'([fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
		     when (C1 == 97) or (C1 == 65), (C2 == 98) or (C2 == 66),
			  (C3 == 115) or (C3 == 83), (C4 == 116) or (C4 == 84),
			  (C5 == 114) or (C5 == 82), (C6 == 97) or (C6 == 65),
			  (C7 == 99) or (C7 == 67), (C8 == 116) or (C8 == 84) ->
		     {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
		 (_) -> fail
	     end,
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10 | Tl])
		     when (C1 == 115) or (C1 == 83),
			  (C2 == 116) or (C2 == 84), (C3 == 114) or (C3 == 82),
			  (C4 == 117) or (C4 == 85), (C5 == 99) or (C5 == 67),
			  (C6 == 116) or (C6 == 84), (C7 == 117) or (C7 == 85),
			  (C8 == 114) or (C8 == 82), (C9 == 97) or (C9 == 65),
			  (C10 == 108) or (C10 == 76) ->
		     {ok, [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10], Tl};
		 (_) -> fail
	     end,
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9 | Tl])
		     when (C1 == 97) or (C1 == 65),
			  (C2 == 117) or (C2 == 85), (C3 == 120) or (C3 == 88),
			  (C4 == 105) or (C4 == 73), (C5 == 108) or (C5 == 76),
			  (C6 == 105) or (C6 == 73), (C7 == 97) or (C7 == 65),
			  (C8 == 114) or (C8 == 82), (C9 == 121) or (C9 == 89) ->
		     {ok, [C1, C2, C3, C4, C5, C6, C7, C8, C9], Tl};
		 (_) -> fail
	     end]).

'AttributeTypeDescription'() ->
    '__seq'(['LPAREN'(), 'WSP'(), numericoid(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 110) or (C1 == 78),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 109) or (C3 == 77),
					      (C4 == 101) or (C4 == 69) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdescrs()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 100) or (C1 == 68),
					      (C2 == 101) or (C2 == 69),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 99) or (C4 == 67) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdstring()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
					 when (C1 == 111) or (C1 == 79),
					      (C2 == 98) or (C2 == 66),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 111) or (C4 == 79),
					      (C5 == 108) or (C5 == 76),
					      (C6 == 101) or (C6 == 69),
					      (C7 == 116) or (C7 == 84),
					      (C8 == 101) or (C8 == 69) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
				     (_) -> fail
				 end])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3 | Tl])
					 when (C1 == 115) or (C1 == 83),
					      (C2 == 117) or (C2 == 85),
					      (C3 == 112) or (C3 == 80) ->
					 {ok, [C1, C2, C3], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oid()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
					 when (C1 == 101) or (C1 == 69),
					      (C2 == 113) or (C2 == 81),
					      (C3 == 117) or (C3 == 85),
					      (C4 == 97) or (C4 == 65),
					      (C5 == 108) or (C5 == 76),
					      (C6 == 105) or (C6 == 73),
					      (C7 == 116) or (C7 == 84),
					      (C8 == 121) or (C8 == 89) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oid()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
					 when (C1 == 111) or (C1 == 79),
					      (C2 == 114) or (C2 == 82),
					      (C3 == 100) or (C3 == 68),
					      (C4 == 101) or (C4 == 69),
					      (C5 == 114) or (C5 == 82),
					      (C6 == 105) or (C6 == 73),
					      (C7 == 110) or (C7 == 78),
					      (C8 == 103) or (C8 == 71) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oid()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6 | Tl])
					 when (C1 == 115) or (C1 == 83),
					      (C2 == 117) or (C2 == 85),
					      (C3 == 98) or (C3 == 66),
					      (C4 == 115) or (C4 == 83),
					      (C5 == 116) or (C5 == 84),
					      (C6 == 114) or (C6 == 82) ->
					 {ok, [C1, C2, C3, C4, C5, C6], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oid()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6 | Tl])
					 when (C1 == 115) or (C1 == 83),
					      (C2 == 121) or (C2 == 89),
					      (C3 == 110) or (C3 == 78),
					      (C4 == 116) or (C4 == 84),
					      (C5 == 97) or (C5 == 65),
					      (C6 == 120) or (C6 == 88) ->
					 {ok, [C1, C2, C3, C4, C5, C6], Tl};
				     (_) -> fail
				 end,
				 'SP'(), noidlen()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12
				       | Tl])
					 when (C1 == 115) or (C1 == 83),
					      (C2 == 105) or (C2 == 73),
					      (C3 == 110) or (C3 == 78),
					      (C4 == 103) or (C4 == 71),
					      (C5 == 108) or (C5 == 76),
					      (C6 == 101) or (C6 == 69), C7 == 45,
					      (C8 == 118) or (C8 == 86),
					      (C9 == 97) or (C9 == 65),
					      (C10 == 108) or (C10 == 76),
					      (C11 == 117) or (C11 == 85),
					      (C12 == 101) or (C12 == 69) ->
					 {ok,
					  [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12],
					  Tl};
				     (_) -> fail
				 end])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10 | Tl])
					 when (C1 == 99) or (C1 == 67),
					      (C2 == 111) or (C2 == 79),
					      (C3 == 108) or (C3 == 76),
					      (C4 == 108) or (C4 == 76),
					      (C5 == 101) or (C5 == 69),
					      (C6 == 99) or (C6 == 67),
					      (C7 == 116) or (C7 == 84),
					      (C8 == 105) or (C8 == 73),
					      (C9 == 118) or (C9 == 86),
					      (C10 == 101) or (C10 == 69) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10], Tl};
				     (_) -> fail
				 end])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
				       C13, C14, C15, C16, C17, C18, C19, C20
				       | Tl])
					 when (C1 == 110) or (C1 == 78),
					      (C2 == 111) or (C2 == 79), C3 == 45,
					      (C4 == 117) or (C4 == 85),
					      (C5 == 115) or (C5 == 83),
					      (C6 == 101) or (C6 == 69),
					      (C7 == 114) or (C7 == 82), C8 == 45,
					      (C9 == 109) or (C9 == 77),
					      (C10 == 111) or (C10 == 79),
					      (C11 == 100) or (C11 == 68),
					      (C12 == 105) or (C12 == 73),
					      (C13 == 102) or (C13 == 70),
					      (C14 == 105) or (C14 == 73),
					      (C15 == 99) or (C15 == 67),
					      (C16 == 97) or (C16 == 65),
					      (C17 == 116) or (C17 == 84),
					      (C18 == 105) or (C18 == 73),
					      (C19 == 111) or (C19 == 79),
					      (C20 == 110) or (C20 == 78) ->
					 {ok,
					  [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
					   C13, C14, C15, C16, C17, C18, C19, C20],
					  Tl};
				     (_) -> fail
				 end])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5 | Tl])
					 when (C1 == 117) or (C1 == 85),
					      (C2 == 115) or (C2 == 83),
					      (C3 == 97) or (C3 == 65),
					      (C4 == 103) or (C4 == 71),
					      (C5 == 101) or (C5 == 69) ->
					 {ok, [C1, C2, C3, C4, C5], Tl};
				     (_) -> fail
				 end,
				 'SP'(), usage()])),
	     extensions(), 'WSP'(), 'RPAREN'()]).

usage() ->
    '__alt'([fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10,
		   C11, C12, C13, C14, C15, C16
		   | Tl])
		     when (C1 == 117) or (C1 == 85),
			  (C2 == 115) or (C2 == 83), (C3 == 101) or (C3 == 69),
			  (C4 == 114) or (C4 == 82), (C5 == 97) or (C5 == 65),
			  (C6 == 112) or (C6 == 80), (C7 == 112) or (C7 == 80),
			  (C8 == 108) or (C8 == 76), (C9 == 105) or (C9 == 73),
			  (C10 == 99) or (C10 == 67), (C11 == 97) or (C11 == 65),
			  (C12 == 116) or (C12 == 84),
			  (C13 == 105) or (C13 == 73),
			  (C14 == 111) or (C14 == 79),
			  (C15 == 110) or (C15 == 78),
			  (C16 == 115) or (C16 == 83) ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13,
		       C14, C15, C16],
		      Tl};
		 (_) -> fail
	     end,
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13, C14, C15, C16, C17, C18
		   | Tl])
		     when (C1 == 100) or (C1 == 68),
			  (C2 == 105) or (C2 == 73), (C3 == 114) or (C3 == 82),
			  (C4 == 101) or (C4 == 69), (C5 == 99) or (C5 == 67),
			  (C6 == 116) or (C6 == 84), (C7 == 111) or (C7 == 79),
			  (C8 == 114) or (C8 == 82), (C9 == 121) or (C9 == 89),
			  (C10 == 111) or (C10 == 79),
			  (C11 == 112) or (C11 == 80),
			  (C12 == 101) or (C12 == 69),
			  (C13 == 114) or (C13 == 82), (C14 == 97) or (C14 == 65),
			  (C15 == 116) or (C15 == 84),
			  (C16 == 105) or (C16 == 73),
			  (C17 == 111) or (C17 == 79),
			  (C18 == 110) or (C18 == 78) ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13,
		       C14, C15, C16, C17, C18],
		      Tl};
		 (_) -> fail
	     end,
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13, C14, C15, C16, C17, C18, C19, C20
		   | Tl])
		     when (C1 == 100) or (C1 == 68),
			  (C2 == 105) or (C2 == 73), (C3 == 115) or (C3 == 83),
			  (C4 == 116) or (C4 == 84), (C5 == 114) or (C5 == 82),
			  (C6 == 105) or (C6 == 73), (C7 == 98) or (C7 == 66),
			  (C8 == 117) or (C8 == 85), (C9 == 116) or (C9 == 84),
			  (C10 == 101) or (C10 == 69),
			  (C11 == 100) or (C11 == 68),
			  (C12 == 111) or (C12 == 79),
			  (C13 == 112) or (C13 == 80),
			  (C14 == 101) or (C14 == 69),
			  (C15 == 114) or (C15 == 82), (C16 == 97) or (C16 == 65),
			  (C17 == 116) or (C17 == 84),
			  (C18 == 105) or (C18 == 73),
			  (C19 == 111) or (C19 == 79),
			  (C20 == 110) or (C20 == 78) ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13,
		       C14, C15, C16, C17, C18, C19, C20],
		      Tl};
		 (_) -> fail
	     end,
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12
		   | Tl])
		     when (C1 == 100) or (C1 == 68),
			  (C2 == 115) or (C2 == 83), (C3 == 97) or (C3 == 65),
			  (C4 == 111) or (C4 == 79), (C5 == 112) or (C5 == 80),
			  (C6 == 101) or (C6 == 69), (C7 == 114) or (C7 == 82),
			  (C8 == 97) or (C8 == 65), (C9 == 116) or (C9 == 84),
			  (C10 == 105) or (C10 == 73),
			  (C11 == 111) or (C11 == 79),
			  (C12 == 110) or (C12 == 78) ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12],
		      Tl};
		 (_) -> fail
	     end]).

'MatchingRuleDescription'() ->
    '__seq'(['LPAREN'(), 'WSP'(), numericoid(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 110) or (C1 == 78),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 109) or (C3 == 77),
					      (C4 == 101) or (C4 == 69) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdescrs()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 100) or (C1 == 68),
					      (C2 == 101) or (C2 == 69),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 99) or (C4 == 67) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdstring()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
					 when (C1 == 111) or (C1 == 79),
					      (C2 == 98) or (C2 == 66),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 111) or (C4 == 79),
					      (C5 == 108) or (C5 == 76),
					      (C6 == 101) or (C6 == 69),
					      (C7 == 116) or (C7 == 84),
					      (C8 == 101) or (C8 == 69) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
				     (_) -> fail
				 end])),
	     'SP'(),
	     fun ([C1, C2, C3, C4, C5, C6 | Tl])
		     when (C1 == 115) or (C1 == 83),
			  (C2 == 121) or (C2 == 89), (C3 == 110) or (C3 == 78),
			  (C4 == 116) or (C4 == 84), (C5 == 97) or (C5 == 65),
			  (C6 == 120) or (C6 == 88) ->
		     {ok, [C1, C2, C3, C4, C5, C6], Tl};
		 (_) -> fail
	     end,
	     'SP'(), numericoid(), extensions(), 'WSP'(),
	     'RPAREN'()]).

'MatchingRuleUseDescription'() ->
    '__seq'(['LPAREN'(), 'WSP'(), numericoid(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 110) or (C1 == 78),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 109) or (C3 == 77),
					      (C4 == 101) or (C4 == 69) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdescrs()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 100) or (C1 == 68),
					      (C2 == 101) or (C2 == 69),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 99) or (C4 == 67) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdstring()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
					 when (C1 == 111) or (C1 == 79),
					      (C2 == 98) or (C2 == 66),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 111) or (C4 == 79),
					      (C5 == 108) or (C5 == 76),
					      (C6 == 101) or (C6 == 69),
					      (C7 == 116) or (C7 == 84),
					      (C8 == 101) or (C8 == 69) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
				     (_) -> fail
				 end])),
	     'SP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7 | Tl])
		     when (C1 == 97) or (C1 == 65),
			  (C2 == 112) or (C2 == 80), (C3 == 112) or (C3 == 80),
			  (C4 == 108) or (C4 == 76), (C5 == 105) or (C5 == 73),
			  (C6 == 101) or (C6 == 69), (C7 == 115) or (C7 == 83) ->
		     {ok, [C1, C2, C3, C4, C5, C6, C7], Tl};
		 (_) -> fail
	     end,
	     'SP'(), oids(), extensions(), 'WSP'(), 'RPAREN'()]).

'SyntaxDescription'() ->
    '__seq'(['LPAREN'(), 'WSP'(), numericoid(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 100) or (C1 == 68),
					      (C2 == 101) or (C2 == 69),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 99) or (C4 == 67) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdstring()])),
	     extensions(), 'WSP'(), 'RPAREN'()]).

'DITContentRuleDescription'() ->
    '__seq'(['LPAREN'(), 'WSP'(), numericoid(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 110) or (C1 == 78),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 109) or (C3 == 77),
					      (C4 == 101) or (C4 == 69) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdescrs()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 100) or (C1 == 68),
					      (C2 == 101) or (C2 == 69),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 99) or (C4 == 67) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdstring()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
					 when (C1 == 111) or (C1 == 79),
					      (C2 == 98) or (C2 == 66),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 111) or (C4 == 79),
					      (C5 == 108) or (C5 == 76),
					      (C6 == 101) or (C6 == 69),
					      (C7 == 116) or (C7 == 84),
					      (C8 == 101) or (C8 == 69) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
				     (_) -> fail
				 end])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3 | Tl])
					 when (C1 == 97) or (C1 == 65),
					      (C2 == 117) or (C2 == 85),
					      (C3 == 120) or (C3 == 88) ->
					 {ok, [C1, C2, C3], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oids()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 109) or (C1 == 77),
					      (C2 == 117) or (C2 == 85),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 116) or (C4 == 84) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oids()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3 | Tl])
					 when (C1 == 109) or (C1 == 77),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 121) or (C3 == 89) ->
					 {ok, [C1, C2, C3], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oids()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3 | Tl])
					 when (C1 == 110) or (C1 == 78),
					      (C2 == 111) or (C2 == 79),
					      (C3 == 116) or (C3 == 84) ->
					 {ok, [C1, C2, C3], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oids()])),
	     extensions(), 'WSP'(), 'RPAREN'()]).

'DITStructureRuleDescription'() ->
    '__seq'(['LPAREN'(), 'WSP'(), ruleid(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 110) or (C1 == 78),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 109) or (C3 == 77),
					      (C4 == 101) or (C4 == 69) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdescrs()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 100) or (C1 == 68),
					      (C2 == 101) or (C2 == 69),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 99) or (C4 == 67) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdstring()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
					 when (C1 == 111) or (C1 == 79),
					      (C2 == 98) or (C2 == 66),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 111) or (C4 == 79),
					      (C5 == 108) or (C5 == 76),
					      (C6 == 101) or (C6 == 69),
					      (C7 == 116) or (C7 == 84),
					      (C8 == 101) or (C8 == 69) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
				     (_) -> fail
				 end])),
	     'SP'(),
	     fun ([C1, C2, C3, C4 | Tl])
		     when (C1 == 102) or (C1 == 70),
			  (C2 == 111) or (C2 == 79), (C3 == 114) or (C3 == 82),
			  (C4 == 109) or (C4 == 77) ->
		     {ok, [C1, C2, C3, C4], Tl};
		 (_) -> fail
	     end,
	     'SP'(), oid(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3 | Tl])
					 when (C1 == 115) or (C1 == 83),
					      (C2 == 117) or (C2 == 85),
					      (C3 == 112) or (C3 == 80) ->
					 {ok, [C1, C2, C3], Tl};
				     (_) -> fail
				 end,
				 ruleids()])),
	     extensions(), 'WSP'(), 'RPAREN'()]).

ruleids() ->
    '__alt'([ruleid(),
	     '__seq'(['LPAREN'(), 'WSP'(), ruleidlist(), 'WSP'(),
		      'RPAREN'()])]).

ruleidlist() ->
    '__seq'([ruleid(),
	     '__repeat'(0, infinity, '__seq'(['SP'(), ruleid()]))]).

ruleid() -> number().

'NameFormDescription'() ->
    '__seq'(['LPAREN'(), 'WSP'(), numericoid(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 110) or (C1 == 78),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 109) or (C3 == 77),
					      (C4 == 101) or (C4 == 69) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdescrs()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4 | Tl])
					 when (C1 == 100) or (C1 == 68),
					      (C2 == 101) or (C2 == 69),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 99) or (C4 == 67) ->
					 {ok, [C1, C2, C3, C4], Tl};
				     (_) -> fail
				 end,
				 'SP'(), qdstring()])),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
					 when (C1 == 111) or (C1 == 79),
					      (C2 == 98) or (C2 == 66),
					      (C3 == 115) or (C3 == 83),
					      (C4 == 111) or (C4 == 79),
					      (C5 == 108) or (C5 == 76),
					      (C6 == 101) or (C6 == 69),
					      (C7 == 116) or (C7 == 84),
					      (C8 == 101) or (C8 == 69) ->
					 {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
				     (_) -> fail
				 end])),
	     'SP'(),
	     fun ([C1, C2 | Tl])
		     when (C1 == 111) or (C1 == 79),
			  (C2 == 99) or (C2 == 67) ->
		     {ok, [C1, C2], Tl};
		 (_) -> fail
	     end,
	     'SP'(), oid(), 'SP'(),
	     fun ([C1, C2, C3, C4 | Tl])
		     when (C1 == 109) or (C1 == 77),
			  (C2 == 117) or (C2 == 85), (C3 == 115) or (C3 == 83),
			  (C4 == 116) or (C4 == 84) ->
		     {ok, [C1, C2, C3, C4], Tl};
		 (_) -> fail
	     end,
	     'SP'(), oids(),
	     '__repeat'(0, 1,
			'__seq'(['SP'(),
				 fun ([C1, C2, C3 | Tl])
					 when (C1 == 109) or (C1 == 77),
					      (C2 == 97) or (C2 == 65),
					      (C3 == 121) or (C3 == 89) ->
					 {ok, [C1, C2, C3], Tl};
				     (_) -> fail
				 end,
				 'SP'(), oids()])),
	     extensions(), 'WSP'(), 'RPAREN'()]).

'SCHEMA'() ->
    '__repeat'(0, infinity,
	       '__alt'(['AttributeType'(), 'AttributeTypes'(),
			'ObjectClass'(), 'ObjectClasses'(), 'MatchingRule'(),
			'MatchingRules'(), 'LdapSyntax'(), 'LdapSyntaxes'(),
			'NameForm'(), 'DITStructureRule'(), 'DITContentRule'(),
			'Syntax'(), 'MatchingRuleUse'(), 'Attribute'()])).

'AttributeType'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13
		   | Tl])
		     when (C1 == 97) or (C1 == 65),
			  (C2 == 116) or (C2 == 84), (C3 == 116) or (C3 == 84),
			  (C4 == 114) or (C4 == 82), (C5 == 105) or (C5 == 73),
			  (C6 == 98) or (C6 == 66), (C7 == 117) or (C7 == 85),
			  (C8 == 116) or (C8 == 84), (C9 == 101) or (C9 == 69),
			  (C10 == 116) or (C10 == 84),
			  (C11 == 121) or (C11 == 89),
			  (C12 == 112) or (C12 == 80),
			  (C13 == 101) or (C13 == 69) ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		       C13],
		      Tl};
		 (_) -> fail
	     end,
	     'WSP'(), 'AttributeTypeDescription'(), 'WSP'()]).

'AttributeTypes'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13, C14, C15
		   | Tl])
		     when (C1 == 97) or (C1 == 65),
			  (C2 == 116) or (C2 == 84), (C3 == 116) or (C3 == 84),
			  (C4 == 114) or (C4 == 82), (C5 == 105) or (C5 == 73),
			  (C6 == 98) or (C6 == 66), (C7 == 117) or (C7 == 85),
			  (C8 == 116) or (C8 == 84), (C9 == 101) or (C9 == 69),
			  (C10 == 116) or (C10 == 84),
			  (C11 == 121) or (C11 == 89),
			  (C12 == 112) or (C12 == 80),
			  (C13 == 101) or (C13 == 69),
			  (C14 == 115) or (C14 == 83), C15 == 58 ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13,
		       C14, C15],
		      Tl};
		 (_) -> fail
	     end,
	     '__repeat'(1, infinity,
			'__seq'(['WSP'(), 'AttributeTypeDescription'(),
				 'WSP'()]))]).

'ObjectClass'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11
		   | Tl])
		     when (C1 == 111) or (C1 == 79),
			  (C2 == 98) or (C2 == 66), (C3 == 106) or (C3 == 74),
			  (C4 == 101) or (C4 == 69), (C5 == 99) or (C5 == 67),
			  (C6 == 116) or (C6 == 84), (C7 == 99) or (C7 == 67),
			  (C8 == 108) or (C8 == 76), (C9 == 97) or (C9 == 65),
			  (C10 == 115) or (C10 == 83),
			  (C11 == 115) or (C11 == 83) ->
		     {ok, [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11],
		      Tl};
		 (_) -> fail
	     end,
	     'WSP'(), 'ObjectClassDescription'(), 'WSP'()]).

'ObjectClasses'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13, C14
		   | Tl])
		     when (C1 == 111) or (C1 == 79),
			  (C2 == 98) or (C2 == 66), (C3 == 106) or (C3 == 74),
			  (C4 == 101) or (C4 == 69), (C5 == 99) or (C5 == 67),
			  (C6 == 116) or (C6 == 84), (C7 == 99) or (C7 == 67),
			  (C8 == 108) or (C8 == 76), (C9 == 97) or (C9 == 65),
			  (C10 == 115) or (C10 == 83),
			  (C11 == 115) or (C11 == 83),
			  (C12 == 101) or (C12 == 69),
			  (C13 == 115) or (C13 == 83), C14 == 58 ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13,
		       C14],
		      Tl};
		 (_) -> fail
	     end,
	     '__repeat'(1, infinity,
			'__seq'(['WSP'(), 'ObjectClassDescription'(),
				 'WSP'()]))]).

'MatchingRule'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12
		   | Tl])
		     when (C1 == 109) or (C1 == 77),
			  (C2 == 97) or (C2 == 65), (C3 == 116) or (C3 == 84),
			  (C4 == 99) or (C4 == 67), (C5 == 104) or (C5 == 72),
			  (C6 == 105) or (C6 == 73), (C7 == 110) or (C7 == 78),
			  (C8 == 103) or (C8 == 71), (C9 == 114) or (C9 == 82),
			  (C10 == 117) or (C10 == 85),
			  (C11 == 108) or (C11 == 76),
			  (C12 == 101) or (C12 == 69) ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12],
		      Tl};
		 (_) -> fail
	     end,
	     'WSP'(), 'MatchingRuleDescription'(), 'WSP'()]).

'MatchingRules'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13, C14
		   | Tl])
		     when (C1 == 109) or (C1 == 77),
			  (C2 == 97) or (C2 == 65), (C3 == 116) or (C3 == 84),
			  (C4 == 99) or (C4 == 67), (C5 == 104) or (C5 == 72),
			  (C6 == 105) or (C6 == 73), (C7 == 110) or (C7 == 78),
			  (C8 == 103) or (C8 == 71), (C9 == 114) or (C9 == 82),
			  (C10 == 117) or (C10 == 85),
			  (C11 == 108) or (C11 == 76),
			  (C12 == 101) or (C12 == 69),
			  (C13 == 115) or (C13 == 83), C14 == 58 ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13,
		       C14],
		      Tl};
		 (_) -> fail
	     end,
	     '__repeat'(1, infinity,
			'__seq'(['WSP'(), 'MatchingRuleDescription'(),
				 'WSP'()]))]).

'LdapSyntax'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10 | Tl])
		     when (C1 == 108) or (C1 == 76),
			  (C2 == 100) or (C2 == 68), (C3 == 97) or (C3 == 65),
			  (C4 == 112) or (C4 == 80), (C5 == 115) or (C5 == 83),
			  (C6 == 121) or (C6 == 89), (C7 == 110) or (C7 == 78),
			  (C8 == 116) or (C8 == 84), (C9 == 97) or (C9 == 65),
			  (C10 == 120) or (C10 == 88) ->
		     {ok, [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10], Tl};
		 (_) -> fail
	     end,
	     'WSP'(), 'SyntaxDescription'(), 'WSP'()]).

'LdapSyntaxes'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13
		   | Tl])
		     when (C1 == 108) or (C1 == 76),
			  (C2 == 100) or (C2 == 68), (C3 == 97) or (C3 == 65),
			  (C4 == 112) or (C4 == 80), (C5 == 115) or (C5 == 83),
			  (C6 == 121) or (C6 == 89), (C7 == 110) or (C7 == 78),
			  (C8 == 116) or (C8 == 84), (C9 == 97) or (C9 == 65),
			  (C10 == 120) or (C10 == 88),
			  (C11 == 101) or (C11 == 69),
			  (C12 == 115) or (C12 == 83), C13 == 58 ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		       C13],
		      Tl};
		 (_) -> fail
	     end,
	     '__repeat'(1, infinity,
			'__seq'(['WSP'(), 'SyntaxDescription'(), 'WSP'()]))]).

'NameForm'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8 | Tl])
		     when (C1 == 110) or (C1 == 78),
			  (C2 == 97) or (C2 == 65), (C3 == 109) or (C3 == 77),
			  (C4 == 101) or (C4 == 69), (C5 == 102) or (C5 == 70),
			  (C6 == 111) or (C6 == 79), (C7 == 114) or (C7 == 82),
			  (C8 == 109) or (C8 == 77) ->
		     {ok, [C1, C2, C3, C4, C5, C6, C7, C8], Tl};
		 (_) -> fail
	     end,
	     'WSP'(), 'NameFormDescription'(), 'WSP'()]).

'DITStructureRule'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13, C14, C15, C16
		   | Tl])
		     when (C1 == 100) or (C1 == 68),
			  (C2 == 105) or (C2 == 73), (C3 == 116) or (C3 == 84),
			  (C4 == 115) or (C4 == 83), (C5 == 116) or (C5 == 84),
			  (C6 == 114) or (C6 == 82), (C7 == 117) or (C7 == 85),
			  (C8 == 99) or (C8 == 67), (C9 == 116) or (C9 == 84),
			  (C10 == 117) or (C10 == 85),
			  (C11 == 114) or (C11 == 82),
			  (C12 == 101) or (C12 == 69),
			  (C13 == 114) or (C13 == 82),
			  (C14 == 117) or (C14 == 85),
			  (C15 == 108) or (C15 == 76),
			  (C16 == 101) or (C16 == 69) ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13,
		       C14, C15, C16],
		      Tl};
		 (_) -> fail
	     end,
	     'WSP'(), 'DITStructureRuleDescription'(), 'WSP'()]).

'DITContentRule'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13, C14
		   | Tl])
		     when (C1 == 100) or (C1 == 68),
			  (C2 == 105) or (C2 == 73), (C3 == 116) or (C3 == 84),
			  (C4 == 99) or (C4 == 67), (C5 == 111) or (C5 == 79),
			  (C6 == 110) or (C6 == 78), (C7 == 116) or (C7 == 84),
			  (C8 == 101) or (C8 == 69), (C9 == 110) or (C9 == 78),
			  (C10 == 116) or (C10 == 84),
			  (C11 == 114) or (C11 == 82),
			  (C12 == 117) or (C12 == 85),
			  (C13 == 108) or (C13 == 76),
			  (C14 == 101) or (C14 == 69) ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13,
		       C14],
		      Tl};
		 (_) -> fail
	     end,
	     'WSP'(), 'DITContentRuleDescription'(), 'WSP'()]).

'Syntax'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6 | Tl])
		     when (C1 == 115) or (C1 == 83),
			  (C2 == 121) or (C2 == 89), (C3 == 110) or (C3 == 78),
			  (C4 == 116) or (C4 == 84), (C5 == 97) or (C5 == 65),
			  (C6 == 120) or (C6 == 88) ->
		     {ok, [C1, C2, C3, C4, C5, C6], Tl};
		 (_) -> fail
	     end,
	     'WSP'(), 'SyntaxDescription'(), 'WSP'()]).

'MatchingRuleUse'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12,
		   C13, C14, C15
		   | Tl])
		     when (C1 == 109) or (C1 == 77),
			  (C2 == 97) or (C2 == 65), (C3 == 116) or (C3 == 84),
			  (C4 == 99) or (C4 == 67), (C5 == 104) or (C5 == 72),
			  (C6 == 105) or (C6 == 73), (C7 == 110) or (C7 == 78),
			  (C8 == 103) or (C8 == 71), (C9 == 114) or (C9 == 82),
			  (C10 == 117) or (C10 == 85),
			  (C11 == 108) or (C11 == 76),
			  (C12 == 101) or (C12 == 69),
			  (C13 == 117) or (C13 == 85),
			  (C14 == 115) or (C14 == 83),
			  (C15 == 101) or (C15 == 69) ->
		     {ok,
		      [C1, C2, C3, C4, C5, C6, C7, C8, C9, C10, C11, C12, C13,
		       C14, C15],
		      Tl};
		 (_) -> fail
	     end,
	     'WSP'(), 'MatchingRuleUseDescription'(), 'WSP'()]).

'Attribute'() ->
    '__seq'(['WSP'(),
	     fun ([C1, C2, C3, C4, C5, C6, C7, C8, C9 | Tl])
		     when (C1 == 97) or (C1 == 65),
			  (C2 == 116) or (C2 == 84), (C3 == 116) or (C3 == 84),
			  (C4 == 114) or (C4 == 82), (C5 == 105) or (C5 == 73),
			  (C6 == 98) or (C6 == 66), (C7 == 117) or (C7 == 85),
			  (C8 == 116) or (C8 == 84), (C9 == 101) or (C9 == 69) ->
		     {ok, [C1, C2, C3, C4, C5, C6, C7, C8, C9], Tl};
		 (_) -> fail
	     end,
	     'WSP'(), attributedescription(), 'WSP'()]).

'__alt'(Ps) -> fun (T) -> '__do_alt'(Ps, T) end.

'__do_alt'([P | Ps], T) ->
    case P(T) of
      {ok, _R, _T1} = Res -> Res;
      fail -> '__do_alt'(Ps, T)
    end;
'__do_alt'([], _) -> fail.

'__repeat'(Min, Max, P) -> '__repeat'(Min, Max, P, 0).

'__repeat'(Min, Max, P, Found) ->
    fun (T) -> '__do_repeat'(Min, Max, P, Found, T) end.

'__do_repeat'(Min, Max, P, Found, T) ->
    case P(T) of
      {ok, R1, T1} when Max == Found + 1 -> {ok, [R1], T1};
      {ok, R1, T1} ->
	  case '__do_repeat'(Min, Max, P, Found + 1, T1) of
	    {ok, R2, T2} -> {ok, [R1 | R2], T2};
	    fail when Found >= Min -> {ok, [R1], T1};
	    fail -> fail
	  end;
      fail when Found >= Min -> {ok, [], T};
      fail -> fail
    end.

'__seq'(Ps) -> fun (T) -> '__do_seq'(Ps, T) end.

'__do_seq'([P | Ps], T) ->
    case P(T) of
      {ok, R1, T1} ->
	  case '__do_seq'(Ps, T1) of
	    {ok, R2, T2} -> {ok, [R1 | R2], T2};
	    fail -> fail
	  end;
      fail -> fail
    end;
'__do_seq'([], T) -> {ok, [], T}.
